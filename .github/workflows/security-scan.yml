name: Security Scan

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * 0'  # Run weekly

jobs:
  security-scan:
    runs-on: ubuntu-latest
    # Use least-privilege for the runner token
    permissions:
      contents: read
      pull-requests: read
      security-events: write
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: TruffleHog OSS (history scan)
        # pin to a stable major release tag for reproducibility
        uses: trufflesecurity/trufflehog@v3
        continue-on-error: true
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
          extra_args: --debug --only-verified --json > trufflehog-report.json
      
      - name: Upload TruffleHog scan results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: trufflehog-report
          path: trufflehog-report.json
          retention-days: 7

      - name: GitGuardian (ggshield) scan (optional)
        # only run this step if the API key secret is configured
        if: ${{ secrets.GITGUARDIAN_API_KEY != '' }}
        uses: GitGuardian/ggshield-action@v1
        with:
          # rely on the action to pick up the API key from the secret
          api_key: ${{ secrets.GITGUARDIAN_API_KEY }}

      - name: Dependency Check
        uses: dependency-check/Dependency-Check_Action@v6
        continue-on-error: true
        with:
          project: 'Stackoverflow Question Quality Analysis'
          path: '.'
          format: 'HTML,JSON'
          args: >
            --failOnCVSS 7
            --enableRetired
            --suppression ./.github/workflows/suppression.xml
            --outputDirectory ./reports
      
      - name: Upload Dependency Check results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: dependency-check-report
          path: ./reports/*
          retention-days: 7

      # Fail the workflow if any high-severity issues were found
      - name: Check scan results
        if: always()
        run: |
          if [ -f "trufflehog-report.json" ] && [ -s "trufflehog-report.json" ]; then
            echo "TruffleHog found verified secrets!"
            exit 1
          fi
          if grep -q '"severity": "HIGH"' ./reports/dependency-check-report.json; then
            echo "High severity vulnerabilities found!"
            exit 1
          fi

      - name: Upload Dependency-Check Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-report
          path: dependency-check-report.html